from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.utils import markdown

import bot.keyboards as kb
from bot.database.methods.get import get_category_name, get_item

router = Router()


# –∫–ª–∞–≤–∞ –≤—Å–µ–≥–¥–∞ —Ü–µ–ø–ª—è–µ—Ç—Å—è –∫ –∫–∞–∫–æ–º—É-—Ç–æ –∞–ø–¥–µ–π—Ç—É (–∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è), –ø–æ—ç—Ç–æ–º—É —Ü–µ–ø–ª—è–µ–º –µ–µ
# @router.message(CommandStart())
# async def cmd_start(message: Message):
#     await rq.set_user(message.from_user.id)
#     await message.answer('Welcome to sneakers store!',
#                          reply_markup=kb.main_kb)  # –ø—Ä–∏–≤—è–∑–∞–ª–∏ –∫–ª–∞–≤—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é 'Hello!'. –ö–ª–∞–≤–∞ –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∞

@router.message(CommandStart())
async def handle_start(message: Message):
    # –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º —Å—Ç—Ä–æ–∫, –ø–æ—ç—Ç–æ–º—É –ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ-–∏—é (–ø—É—Å—Ç—å –±—É–¥–µ—Ç
    # get_on_startup_kb), –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    url = 'https://www.cambridge.org/elt/blog/wp-content/uploads/2020/08/GettyImages-1221348467-e1597069527719.jpg'

    # –µ—Å–ª–∏ —Ö–æ—Ç–∏–º –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Ñ–æ—Ç–æ –≤–∑—è—Ç–æ–≥–æ –ø–æ url
    # await message.answer(
    #     text=f'{markdown.hide_link(url=url)}Hello, {markdown.text(message.from_user.full_name)}!',
    #     parse_mode=ParseMode.HTML,
    #     reply_markup=kb.get_on_startup_kb(),
    # )

    # –µ—Å–ª–∏ —Ö–æ—Ç–∏–º –æ—Ç–≤–µ—Ç–∏—Ç—å —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
    await message.answer_photo(
        parse_mode=ParseMode.HTML,
        photo=url,
        caption=f'{markdown.hide_link(url=url)}Hello, {markdown.text(message.from_user.full_name)}!'
                f' –¢—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ'
    )


@router.message(F.text == 'Dynamic')
async def builder_handler(message: Message):
    await message.answer(
        text='–¢—ã –≤–∏–¥–∏—à—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.',
        reply_markup=kb.phone_keyboard_builder()
    )


@router.message(F.text == 'Static')
async def builder_handler(message: Message):
    await message.answer(
        text='–¢—ã –≤–∏–¥–∏—à—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.',
        reply_markup=kb.phone_keyboard_wo_builder()
    )


@router.message(F.text == 'Bye-bye')
async def bye_handler(message: Message):
    await message.reply(
        text='Bye-bye! Click /start at any time!',
        reply_markup=ReplyKeyboardRemove()  # —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤—É
    )


# @router.message(F.text == kb.Buttontext.WHATS_NEXT)
@router.message(Command('help', prefix='!/'))
async def help_handler(message: Message):
    # text = markdown.text(
    #     markdown.markdown_decoration.quote("I'm an echo bot"),
    #     markdown.text(
    #         "Send me",
    #         markdown.markdown_decoration.bold(
    #             markdown.text(
    #                 markdown.underline("literally"),
    #                 "any"
    #             ),
    #         ),
    #         markdown.markdown_decoration.quote('message!')
    #     ),
    #     sep='\n'
    # )

    await message.answer(
        text='–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ–¥–Ω–æ–π –∏–∑ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã',
        reply_markup=kb.get_contacts_kb()
    )


@router.message(F.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã')
async def contacts(message: Message):
    await message.answer(
        text=markdown.text(
            f"–ê—Ç–µ–ª—å–µ, —Ä–µ–º–æ–Ω—Ç –∏ –ø–æ—à–∏–≤ –æ–¥–µ–∂–¥—ã\n"
            f"üìç –≠–°–°–ï–ù,  –ø—Ä–æ—Å–ø–µ–∫—Ç –Ø—à—å–ª–µ–∫, 14\n"
            f"‚è∞ —Å 9:00 –¥–æ 19:00 –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö\n"
            f"\n–†–µ–º–æ–Ω—Ç –æ–±—É–≤–∏, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π\n"
            f"üìç –≠–°–°–ï–ù,  –ø—Ä–æ—Å–ø–µ–∫—Ç –Ø—à—å–ª–µ–∫, 14\n"
            f"‚è∞ —Å 9:00 –¥–æ 19:00 –ø—è—Ç–Ω–∏—Ü–∞ —Å—É–±–±–æ—Ç–∞ –¥–æ 19:00"
            f"\n"
        )
    )


@router.message(F.text == '–ö–∞—Ç–∞–ª–æ–≥')
async def catalog(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞', reply_markup=await kb.categories())


@router.callback_query(F.data.startswith('category_'))
async def category(callback: CallbackQuery):
    await callback.answer(
        f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {await get_category_name(int(callback.data.split("_")[-1]))}'
    )
    await callback.message.answer(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        reply_markup=await kb.items(callback.data.split('_')[1])
    )


@router.callback_query(F.data.startswith('item_'))
async def item(callback: CallbackQuery):
    item = await get_item(int(callback.data.split("_")[-1]))
    # await callback.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä {item.name}')
    await callback.message.answer(
        f'–ù–∞–∑–≤–∞–Ω–∏–µ: {item.name}\n–û–ø–∏—Å–∞–Ω–∏–µ: {item.description}\n–¶–µ–Ω–∞: {item.price} —Ä—É–±.',
        reply_markup=await kb.items(callback.data.split('_')[1])
    )
